# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
import cryption as cry
import mariadb
import sys

class Ui_LastWindow(object):


    def addp(self):
        appname = self.an.text()
        password = self.passw.text()
        enPass = cry.encrypt_pass(password)
        try:
            connection = mariadb.connect(
                user = 'root',
                password = 'Kesandzsm3354',
                host = 'database-1.czrchfylrgcw.us-east-1.rds.amazonaws.com',
                port = 3306,
                database = 'pass1'
                )  
        except mariadb.Error as e:
            print(f"Error connecting to MariaDB Platform: {e}")
            sys.exit(1) 
        veritabani_sec = connection.cursor()
        userspass = [(appname, enPass[0], enPass[1])]
        veritabani_sec.executemany("""INSERT INTO ppass (appName,password,privateKey) VALUES (?,?,?)""", userspass)
        connection.commit()
        connection.close()
        #self.passwords.clicked.connect(lambda: self.allpassword())
        self.allpassword()
    def allpassword(self):
        a = cry.decrypt2()
        #print(len(a))
        #  arr=np.array(a)
        #  newarr=arr.reshape(2,1)
        # self.textBrowser.clear()
        # self.textBrowser.append(f"sadsa \n{a}")


        try:
            connection = mariadb.connect(
                user = 'root',
                password = 'Kesandzsm3354',
                host = 'database-1.czrchfylrgcw.us-east-1.rds.amazonaws.com',
                port = 3306,
                database = 'pass1'
                )  
        except mariadb.Error as e:
            print(f"Error connecting to MariaDB Platform: {e}")
            sys.exit(1)

        vt=connection.cursor()
        query= "SELECT appName from ppass"
        result0 = vt.execute(query)
        data= vt.fetchall()


        self.tablo.setColumnCount(2)
        self.tablo.setRowCount(len(a))
        i=0
        while i<len(a):
            self.tablo.setItem(i, 1, QtWidgets.QTableWidgetItem(a[i]))
            self.tablo.setItem(i, 0, QtWidgets.QTableWidgetItem(data[i][0]))
            i=i+1

        connection.commit()
        connection.close()


    def passSearch(self):
        self.tablo.clear()
        search1 = self.searchLine.text()
        try:
            connection = mariadb.connect(
                user = 'root',
                password = 'Kesandzsm3354',
                host = 'database-1.czrchfylrgcw.us-east-1.rds.amazonaws.com',
                port = 3306,
                database = 'pass1'
                )  
        except mariadb.Error as e:
            print(f"Error connecting to MariaDB Platform: {e}")
            sys.exit(1) 

        vt=connection.cursor()
        query= "SELECT appName from ppass"
        result1 = vt.execute(query)
        data= vt.fetchall()
        liste=[]

        i=0
        while i <len(data):
            liste.append(data[i][0])
            i=i+1

        result = [i for i in liste if i.startswith(search1)]

        i=0
        while i<len(result):
            #self.tablo.setItem(i, 1, QtWidgets.QTableWidgetItem(a[i]))
            self.tablo.setItem(i, 0, QtWidgets.QTableWidgetItem(result[i]))
            i=i+1
        connection.commit()
        connection.close()

        return result



    def delete(self):
        c=self.passSearch()
        print(c)
        id=c[0]
        try:
            connection = mariadb.connect(
                user = 'root',
                password = 'Kesandzsm3354',
                host = 'database-1.czrchfylrgcw.us-east-1.rds.amazonaws.com',
                port = 3306,
                database = 'pass1'
                )  
        except mariadb.Error as e:
            print(f"Error connecting to MariaDB Platform: {e}")
            sys.exit(1)

        vt = connection.cursor()
        query= """DELETE from ppass where appName = ?"""
        vt.execute(query, (id,))
        connection.commit()
        connection.close()
        self.allpassword()
        self.warning("Alert", f"{c[0]} deleted")


    def warning(self,title,message):
        mess=QtWidgets.QMessageBox()
        mess.setWindowTitle(title)
        mess.setText(message)
        mess.setStandardButtons(QtWidgets.QMessageBox.Ok)
        mess.exec_()

    def setupUi(self, LastWindow):
        LastWindow.setObjectName("LastWindow")
        LastWindow.resize(597, 378)
        LastWindow.setStyleSheet("background-color:rgb(185, 185, 185)")
        self.centralwidget = QtWidgets.QWidget(LastWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.an = QtWidgets.QLineEdit(self.centralwidget)
        self.an.setGeometry(QtCore.QRect(80, 60, 181, 20))
        self.an.setStyleSheet("background-color:rgb(231, 231, 231)")
        self.an.setObjectName("an")
        self.add = QtWidgets.QPushButton(self.centralwidget)
        self.add.setGeometry(QtCore.QRect(470, 60, 75, 23))
        self.add.setObjectName("add")
        self.add.clicked.connect(self.addp)


        self.passw = QtWidgets.QLineEdit(self.centralwidget)
        self.passw.setGeometry(QtCore.QRect(280, 60, 171, 20))
        self.passw.setStyleSheet("background-color:rgb(231, 231, 231)")
        self.passw.setObjectName("passw")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(130, 40, 61, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(330, 40, 47, 20))
        self.label_2.setObjectName("label_2")
        self.search = QtWidgets.QPushButton(self.centralwidget)
        self.search.setGeometry(QtCore.QRect(470, 100, 75, 23))
        self.search.setObjectName("search")
        self.search.clicked.connect(lambda :self.passSearch())

        self.searchLine = QtWidgets.QLineEdit(self.centralwidget)
        self.searchLine.setGeometry(QtCore.QRect(80, 100, 371, 20))
        self.searchLine.setStyleSheet("background-color:rgb(231, 231, 231)")
        self.searchLine.setObjectName("searchLine")
        self.passwords = QtWidgets.QPushButton(self.centralwidget)
        self.passwords.setGeometry(QtCore.QRect(470, 150, 75, 23))
        self.passwords.setObjectName("passwords")
        self.passwords.clicked.connect(lambda: self.allpassword())


        self.delete_2 = QtWidgets.QPushButton(self.centralwidget)
        self.delete_2.setGeometry(QtCore.QRect(470, 200, 75, 23))
        self.delete_2.setObjectName("delete_2")
        self.delete_2.clicked.connect(lambda: self.delete())

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 340, 571, 20))
        self.label_3.setObjectName("label_3")

        self.tablo = QtWidgets.QTableWidget(self.centralwidget)


        self.tablo.setGeometry(QtCore.QRect(80, 130, 371, 192))
        self.tablo.setObjectName("tablo")
        self.tablo.setColumnCount(2)
        self.tablo.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tablo.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tablo.setHorizontalHeaderItem(1, item)

        LastWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(LastWindow)
        self.statusbar.setObjectName("statusbar")
        LastWindow.setStatusBar(self.statusbar)

        self.retranslateUi(LastWindow)
        QtCore.QMetaObject.connectSlotsByName(LastWindow)

    def retranslateUi(self, LastWindow):
        _translate = QtCore.QCoreApplication.translate
        LastWindow.setWindowTitle(_translate("LastWindow", "PasswordSaver"))
        self.add.setText(_translate("LastWindow", "Add New"))
        self.label.setText(_translate("LastWindow", "  AppName"))
        self.label_2.setText(_translate("LastWindow", "Password"))
        self.search.setText(_translate("LastWindow", "Search"))
        self.passwords.setText(_translate("LastWindow", "All Password"))
        self.delete_2.setText(_translate("LastWindow", "Delete"))
        self.label_3.setText(_translate("LastWindow", "Silmek istediğiniz satırı arama yaptıktan sonra delete e basark siliniz. Arama kısmını uygulama ismini tam şekilde yazınız."))
        item = self.tablo.horizontalHeaderItem(0)
        item.setText(_translate("LastWindow", "AppName"))
        item = self.tablo.horizontalHeaderItem(1)
        item.setText(_translate("LastWindow", "Password"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    LastWindow = QtWidgets.QMainWindow()
    ui = Ui_LastWindow()
    ui.setupUi(LastWindow)
    LastWindow.show()
    sys.exit(app.exec_())

